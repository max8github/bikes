akka {
  actor {
    debug {
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
      autoreceive = on
      event-stream = on
    }
    provider = cluster
    allow-java-serialization = on
    akka.actor.warn-about-java-serializer-usage = off
    //serialization-bindings {//momentarily turned off until new cassandra persistence plugin comes out (now at v0.102)
    //  "akka.sample.bikes.CborSerializable" = jackson-cbor
    //}
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  //extensions = [akka.persistence.Persistence]

  persistence {

    journal {
      plugin = "cassandra-journal"
      //auto-start-journals = ["cassandra-journal"]
    }

    //  snapshot-store {
    //    plugin = "cassandra-snapshot-store"
    //    auto-start-snapshot-stores = ["cassandra-snapshot-store"]
    //  }
  }

  artery {
    log-sent-messages = off
//    canonical {
//      # put IP address which other cluster member can reach to (REVIEW_AND_DECIDE)
//      hostname = "127.0.0.1"
//      # assuming you are NOT running more than one node on same vm/machine
//      # if you are, then, you'll have to change below port to be unique per node on same vm/machine
//      port = 2553
//    }
    advanced.maximum-frame-size = 4 MiB
  }

  cluster {
    //distributed-data.durable.lmdb.dir = "/opt/docker/LMDB" // todo: won't work in k8s: need to find central location??

    sharding {
      number-of-shards = 15
      passivate-idle-entity-after = off //20s
      remember-entities = on
      rebalance-interval = 10s
      distributed-data.durable.keys = [] //["*"]  //see https://doc.akka.io/docs/akka/current/typed/cluster-sharding.html#remembering-entities

      least-shard-allocation-strategy {
        rebalance-threshold = 1
        max-simultaneous-rebalance = 3
      }
    }
  }

  discovery {
    kubernetes-api {
      pod-label-selector = "app=%s" # same as the default
    }
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
        # For the kubernetes API this value is substributed into the %s in pod-label-selector
        service-name = "bikes-cluster-demo"

        discovery-method = kubernetes-api
      }
    }
  }

  //  http {
  //    client {
  //      idle-timeout = 120 s
  //    }
  //
  //    host-connection-pool {
  //      idle-timeout = 150 s
  //    }
  //  }
}

bikes {
  routes.ask-timeout = 10s
  //timeout for an fsm that receives no messages in a long time (idle)
  receive-timeout = 360s
  //the fsm eventually should reach a final state like Yielded or Reserved in a maximum time set to this
  fsm-timeout = 80s
  httpHost = 0.0.0.0
  httpPort = 8084
}

//Note: cassandra settings here depend on how the kubernetes yaml file is set for cassandra.
//For example, the namespace value is important. See [StatefulSets](https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/)
cassandra-journal {
  class = "akka.persistence.cassandra.journal.CassandraJournal"
  contact-points = ["cassandra-0.cassandra.bikes-cluster-1.svc.cluster.local", "cassandra-1.cassandra.bikes-cluster-1.svc.cluster.local", "cassandra-2.cassandra.bikes-cluster-1.svc.cluster.local"]
  port = 9042
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}