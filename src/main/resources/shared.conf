akka {
  actor {
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    debug {
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
      autoreceive = on
      event-stream = on
    }
    provider = cluster
    allow-java-serialization = off
    warn-about-java-serializer-usage = on
    serialization-bindings {
      "akka.sample.bikes.Bike$Event" = proto
      "akka.sample.bikes.Bike$Command" = proto
      "akka.sample.bikes.Bike$State" = proto
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  cluster {
    sharding {
      number-of-shards = 15
      passivate-idle-entity-after = off //20s
      remember-entities = on
      rebalance-interval = 10s

      least-shard-allocation-strategy {
        rebalance-threshold = 1
        max-simultaneous-rebalance = 3
      }
    }
  }
}

bikes {
  routes.ask-timeout = 10s
  httpHost = localhost
  httpPort = 8084
}